name: Build

on:
  release:
    types: [created]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-haskell@v1.1
      with:
        ghc-version: '8.8.4'
        cabal-version: '3.0'
        enable-stack: true
        stack-version: 'latest'

    - name: Dependencies for Linux
      if: runner.os == 'Linux'
      run: sudo apt-get -y install libasound2-dev

    - name: Build
      run: stack build

    - name: Create executable for Linux and macOS
      if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      run: |
        export DEST_ROOT="dtx2midi"
        export DEST_BIN="${DEST_ROOT}/bin"
        export DEST_DOC="${DEST_ROOT}/doc"
        export STACK_DOC="$(stack path --snapshot-install-root)/doc"
        mkdir -p ${DEST_BIN}
        stack install --local-bin-path=${DEST_BIN}
        strip ${DEST_BIN}/dtx2midi
        cp -R $STACK_DOC $DEST_DOC
        cp LICENSE $DEST_DOC
        zip -r dtx2midi.zip ${DEST_ROOT}

    - name: Create executable for Windows
      if: runner.os == 'Windows'
      run: |
        $DEST_ROOT = "dtx2midi"
        $DEST_BIN = Join-Path ${DEST_ROOT} bin
        $DEST_DOC = Join-Path ${DEST_ROOT} doc
        $STACK_SNAPSHOT_ROOT = &"stack" path --snapshot-install-root
        $STACK_DOC = Join-Path ${STACK_SNAPSHOT_ROOT} doc
        mkdir ${DEST_BIN}
        stack install --local-bin-path=${DEST_BIN}
        Copy-Item -Path ${STACK_DOC} -Destination ${DEST_DOC} -Recurse
        Copy-Item -Path LICENSE -Destination ${DEST_DOC}
        Compress-Archive -Path ${DEST_ROOT} -DestinationPath dtx2midi.zip

    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: dtx2midi.zip
        asset_name: dtx2midi-${{ runner.os }}.zip
        asset_content_type: application/zip
